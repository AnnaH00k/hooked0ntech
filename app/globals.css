@tailwind base;
@tailwind components;
@tailwind utilities;

@import "./styles/vines.css";

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
}

.arrow-down svg {
  color: rgba(160, 162, 160, 0.5); /* 50% transparent */
}

.arrow-down svg:hover {
  color: rgba(160, 162, 160, 1); /* 100% transparent */
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

/* Add these new styles */
.vine {
  animation-play-state: running !important;
}

.vine:hover {
  animation-play-state: paused !important;
}

/* Add a transform layer to handle both animation and mouse interaction */
.vine::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
}

/* Ensure transforms work on both layers */
.vine,
.vine::before {
  will-change: transform, opacity;
  backface-visibility: hidden;
  transform-style: preserve-3d;
}

@keyframes wave {
  0% {
    background-position: 0% 50%;
  }
  100% {
    background-position: 100% 50%;
  }
}

.animate-wave {
  background: linear-gradient(90deg, 
    rgba(255,255,255,0) 0%,
    rgba(255,255,255,0.3) 50%,
    rgba(255,255,255,0) 100%
  );
  background-size: 200% 100%;
  animation: wave 8s linear infinite;
}
